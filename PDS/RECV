/*rexx*/
/**********************************************************************
*
* Name: RECV (REXX exec)
*
* Abstract:
*
*    REXX exec to unload PDS files encompassing FTPC118/119 programs.
*    Also allocates a load library dataset for link-edits.
*
* Invocation:
*
*    Execute in TSO as a REXX exec e.g.
*    EX '(userid).CBTxxx.FILE600.PDS(RECV)'
*
* Author: Paul Wells
*         Saudi Aramco Box 12959
*         Dhahran
*         Saudi Arabia
*
* Email:  paul.wells@aramco.com
*
* History:
*
*    PW 06/Jun/2005 - Add REXX library (oops I forgot it!).
*                   - Generated automatic datestamped dataset
*                     names if intended dataset names already exist.
*    PW 30/Mar/2003 - Warn about exisitng libraries before executing
*                     RECEIVE command.
*    PW 18/Sep/2002 - Original
*
*
***********************************************************************/

 parse source . . s3 . s5 .
 say;say s3" begins...";say
 address TSO
 errflag = 0
 pr = prompt("ON")
 ms = msg("ON")
 /* Use TSO prefix first then userid to behave like TSO RECEIVE */
 dsnpre = sysvar("SYSPREF")
 if dsnpre = "" then dsnpre = sysvar("SYSUID")

 call recds "CBT.FILE600.ASM.PDS" "XMITPDSA"
 call recds "CBT.FILE600.C.PDS" "XMITPDSC"
 call recds "CBT.FILE600.OBJ.PDS" "XMITPDSO"
 call recds "CBT.FILE600.REXX.PDS" "XMITPDSR"

 say
 /* Allocate a load library */
 dsn1 = dsnpre".CBT.FILE600.LOAD"
 if sysdsn("'"dsn1"'") = "DATASET NOT FOUND" then do
   "ALLOC DA('"dsn1"') NEW CATALOG",
    "SP(30 15) DIR(44) DSORG(PO)",
    "RECFM(U) LRECL(0) BLKSIZE(32760)"
   if RC = 0 then do
     x = prompt("OFF")
     x = msg("OFF")
     "FREE DA('"dsn1"')"
     say s3" has allocated load library '"dsn1"'"
   end
   else do
     say s3" failed to allocate load library '"dsn1"' (RC="RC")"
     errflag = 1
   end
 end
 else ,
  say s3" detected that load library '"dsn1"' already exists"

 say
 if ¬(errflag) then do
   say s3" completed successfully..."
   say;say "Please refer to member $DOCFTPC (PDF",
    "format) for FTP SMF related material and"
   say "the $INDEX members",
    "of the received PDSes for other material";say
 end
 else do
   say s3" did not complete successfully..."
   say;say "Please check prior error messages and run "s3" again."
 end
 x = prompt(pr)
 x = msg(ms)

exit 0


recds:

 parse arg rdss rdmem

 "newstack"

 rds = dsnpre"."rdss
 if sysdsn("'"rds"'") = "OK" then do
   rdstim = time()
   rdsstr = "D"substr(date("S"),3)".T"substr(rdstim,1,2)||,
    substr(rdstim,4,2)||substr(rdstim,7,2)
   rdsdso = dsnpre"."rdss"."rdsstr
   say;say "*Warning* "rds" already exists so",
    rdsdso" will be used for the output dataset."
   xmitstr = "ds('"rdsdso"')"
   rdsnotfy = " to '"rdsdso"'"
 end
 else do
   xmitstr = " "
   rdsnotfy = ""
 end

 say;say "Receiving '"rds"'"rdsnotfy;say
 queue xmitstr
 "receive inda('"s5"("rdmem")')"
 if RC ¬= 0 then do
   say "Receive '"rds"' was not successful";say
   errflag = 1
 end

 "delstack"

return
